=Savage Wheels installation instructions=

==Last updated on 12 Sep 2010==

==SVN development download==
Get the latest source code by using subversion:

$ svn co checkout http://savagewheels.googlecode.com/svn/trunk/ savagewheels

==Supported Platforms==
  * Linux x86/x64
  * Windows x86/x64
  * Tested on Linux distros - Debian/Archlinux/Ubuntu
  * Tested on Windows XP/2003/Vista


==Installation on Linux platforms==

===Requirements:===
  * libSDL 1.2.x - You should install this using your package manager.
  * FMod 3.75.x - Since it is no longer maintained, the package is included with the sources in the SVN.
  * CMake 2.6 and above
  * (Ubuntu specific) Install the package - build-essential

===Instructions===

1. Download the sources from the SVN.

2. Install the libSDL package using the package manager on your Linux distribution.

3. Install the FMod shared object. Go to the sources folder and copy the file "fmod/linux/api/libfmod-3.75.so" to /usr/local/lib.
   Note: If you do not have super use rights to copy the .so file in /usr/local/lib specify on the cmake command line the relative path
   to the .so file, e.g.,
   $ cmake CMakeLists.txt -DFMOD_SO_PATH=./fmod/linux/api
   Note: For x64 bit installation I was not able to locate the proper .so file, therefore Savage Wheels runs without sound on a x64 bit Linux :( It's sad.

4. Go to the sources directory and start CMake via:
   $ cmake CMakeLists.txt
   Note: For x64 Linux versions use the following:
   $ cmake CMakeLists.txt -DNO_SOUND=1

5. Build the project with:
   $ make

6. Copy the produced binary file -> "savagewheels" to the bin/ folder.

7. Download the Savage Wheels data files. You will need those, since they contain all graphics, sound, and vehicles data.
   Extract the downloaded archive into the bin/ folder. The important folders are - autos/, graphics/, sounds/.

8. Ok, you're done :) Go to the bin/ folder and start the game using the "savagewheels" binary.
  
   ...Oh, one more thing. If you want to create distributable you may use the dist-build.sh script to do so:
   $ ./dist-build build
   This will create a folder dist-build.tmp/ and an archive inside, containing a tar.gz file with the "Ready For Playing" game. 


==Installation on Windows==

===Requirements===
  * Microsoft Visual Studio 2005

===Instructions===

1. Download the sources from the SVN.

2. Download the Savage Wheels data files. You will need those, since they contain all graphics, sound, and vehicles data.
   Extract the downloaded archive into the relative bin\ folder. The important folders are - autos/, graphics/, sounds/.

3. Open the solution (.sln) file in your VS2005. 

4. Choose "Release" (or "Debug") from the Build settings and compile.

5. All the required files should be available in the relative \bin folder. You should be able to start the EXE file from there.


==Notes about compiling on x64 systems==

Well, it will compile but ...it may not work :( The game is 10 years old and much of the code was not written 
to be portable.

The major problems seem to be on Linux systems, where I get a lot of crashes due to wrong addressing
and data type convertions. The data files serialization and deserialization code was rewritten and
seems to not cause troubles anymore, however there are problems with SDL_Surface objects and gfx shadows,
which may lead to a crash on a x64 bit version of the game.

I have not made any tests on Windows x64, since I do not have yet such system. There could be problems
in there as well.


==Compiling a Debug version==

When issuing the command:
$ cmake CMakeLists.txt
You will create a makefile for a Release build of the game. If not let me know ;)
If you want to build a Debug version to catch a bug or something, use the following:
$ cmake CMakeLists.txt -DCMAKE_BUILD_TYPE=Debug


==Links==

  * Somehow "official" game page - http://kenamick.com/savagewheels/
  * More recent Google Code page - http://code.google.com/p/savagewheels/